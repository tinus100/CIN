name: CI Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel_user
          MYSQL_PASSWORD: laravel_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: xdebug

      - name: Check Xdebug Installation
        run: php -v && php -m | grep xdebug

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h "127.0.0.1" --silent; then
              break
            fi
            echo 'Waiting for MySQL...'
            sleep 1
          done
          if [ "$i" = 0 ]; then
            echo 'MySQL did not start in time.'
            exit 1
          fi

      - name: Install dependencies
        working-directory: laravel
        run: composer install --prefer-dist --no-progress

      - name: Run migrations
        working-directory: laravel
        run: php artisan migrate --env=testing --force

      - name: Run Unit Tests and Generate Coverage Report (from Vendor)
        working-directory: laravel
        run: |
          if [ -f ./vendor/bin/phpunit ]; then
            ./vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage.xml
          else
            echo "PHPUnit not found in vendor, installing globally."
            composer global require phpunit/phpunit:^9.0
            ~/.composer/vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage.xml
          fi

      - name: Verify Coverage Report Exists
        working-directory: laravel
        run: ls -la

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.projectKey=project-cin \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
