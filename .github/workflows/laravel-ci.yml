name: CI Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Gebruik nu een Linux runner die Docker en MySQL ondersteunt

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Stap 1: Checkout de repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Stap 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Set de PHP versie die je nodig hebt
          extensions: mbstring, bcmath, gd, xml, pdo, tokenizer
          coverage: xdebug  # Optioneel: als je een coverage rapport wilt

      # Stap 3: Install dependencies
      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-scripts --no-progress --no-interaction

      # Stap 4: Set up de .env file
      - name: Set up .env file
        run: cp .env.example .env

      # Stap 5: Update database configuratie voor CI
      - name: Update database configuratie
        run: |
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=testing/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=rootpassword/' .env

      # Stap 6: Generate application key
      - name: Generate application key
        run: php artisan key:generate

      # Stap 7: Wacht tot MySQL beschikbaar is
      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin --user=root --password=rootpassword --host=127.0.0.1 --port=3306 ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done

      # Stap 8: Run migrations
      - name: Run migrations
        run: php artisan migrate --env=testing

      # Stap 9: Run tests
      - name: Run tests
        run: php artisan test

      # Stap 10: Run SonarQube Analysis
      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.projectKey=project-cin \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          
      # Stap 11: Upload coverage naar Codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
