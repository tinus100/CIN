name: Laravel CI with Database Tests and Coverage Reporting

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=root_password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for SonarCloud analysis

      # Step 2: Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, gd, xml, pdo, tokenizer
          coverage: xdebug  # Enable xdebug for test coverage

      # Step 3: Install dependencies
      - name: Install dependencies
        working-directory: ./laravel
        run: composer install --prefer-dist --no-scripts --no-progress --no-interaction

      # Step 4: Run PHP_CodeSniffer
      - name: Run PHP_CodeSniffer
        working-directory: ./laravel
        run: vendor/bin/phpcs --standard=PSR12 app

      # Step 5: Set up the .env file
      - name: Set up .env file
        working-directory: ./laravel
        run: cp .env.example .env

      # Step 6: Update database configuration for CI
      - name: Update database configuration
        working-directory: ./laravel
        run: |
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=root_password/' .env

      # Step 7: Generate application key
      - name: Generate application key
        working-directory: ./laravel
        run: php artisan key:generate

      # Step 8: Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        working-directory: ./laravel
        run: |
          while ! mysqladmin --user=root --password=root_password --host=127.0.0.1 --port=3306 ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 2
          done

      # Step 9: Run migrations
      - name: Run migrations
        working-directory: ./laravel
        run: php artisan migrate --env=testing --force

      # Step 10: Run tests with coverage
      - name: Run tests and generate coverage
        working-directory: ./laravel
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      # Step 11: Debug coverage.xml
      - name: Check if coverage.xml exists
        working-directory: ./laravel
        run: ls -al coverage.xml

      # Step 12: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./laravel/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      # Step 13: Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 14: Check analyzed files
      - name: Check analyzed files
        run: cat sonar-project.properties
